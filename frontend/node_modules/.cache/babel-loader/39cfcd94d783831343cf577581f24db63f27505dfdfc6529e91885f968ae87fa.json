{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Booking() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const [room, setRoom] = useState(null);\n  const [checkInDate, setCheckInDate] = useState(\"\");\n  const [checkOutDate, setCheckOutDate] = useState(\"\");\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    try {\n      if (storedUser) {\n        const parsedUser = JSON.parse(storedUser);\n        console.log(\"User from localStorage:\", parsedUser); // ✅ Added Debug Print\n\n        if (parsedUser !== null && parsedUser !== void 0 && parsedUser.id) {\n          setUser(parsedUser);\n        } else {\n          alert(\"Please login first to book a room\");\n          navigate(\"/login\");\n        }\n      } else {\n        alert(\"Please login first to book a room\");\n        navigate(\"/login\");\n      }\n    } catch (err) {\n      console.log(err);\n      alert(\"Please login first to book a room\");\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (roomId) {\n      axios.get(`http://localhost:8080/rooms/${roomId}`).then(res => setRoom(res.data)).catch(err => console.log(err));\n    }\n  }, [roomId]);\n  const calculateTotalPrice = () => {\n    if (!checkInDate || !checkOutDate || !room) return 0;\n    const start = new Date(checkInDate);\n    const end = new Date(checkOutDate);\n    const diffTime = end - start;\n    const diffDays = diffTime / (1000 * 60 * 60 * 24);\n    return diffDays > 0 ? diffDays * room.price : 0;\n  };\n  const handleBooking = () => {\n    if (!(user !== null && user !== void 0 && user.id)) {\n      alert(\"Please login first\");\n      navigate(\"/login\");\n      return;\n    }\n    if (!checkInDate || !checkOutDate) {\n      alert(\"Please select both check-in and check-out dates\");\n      return;\n    }\n    const start = new Date(checkInDate);\n    const end = new Date(checkOutDate);\n    if (start >= end) {\n      alert(\"Check-out date must be after check-in date\");\n      return;\n    }\n    axios.post(\"http://localhost:8080/booking/book\", null, {\n      params: {\n        userId: user.id,\n        roomId: roomId,\n        checkInDate: checkInDate,\n        checkOutDate: checkOutDate\n      }\n    }).then(() => {\n      setShowSuccessPopup(true);\n    }).catch(err => {\n      var _err$response;\n      return alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || \"Booking failed\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Booking, \"6jmK/WbQrOujyrDyx/1+wmTw4zo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Booking;\nvar _c;\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useParams","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","Booking","_s","roomId","navigate","room","setRoom","checkInDate","setCheckInDate","checkOutDate","setCheckOutDate","showSuccessPopup","setShowSuccessPopup","user","setUser","storedUser","localStorage","getItem","parsedUser","JSON","parse","console","log","id","alert","err","get","then","res","data","catch","calculateTotalPrice","start","Date","end","diffTime","diffDays","price","handleBooking","post","params","userId","_err$response","response","_c","$RefreshReg$"],"sources":["C:/Users/palla/Desktop/React/hotelbooking/src/pages/Booking.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Booking() {\r\n  const { roomId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [room, setRoom] = useState(null);\r\n  const [checkInDate, setCheckInDate] = useState(\"\");\r\n  const [checkOutDate, setCheckOutDate] = useState(\"\");\r\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n\r\n    try {\r\n      if (storedUser) {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        console.log(\"User from localStorage:\", parsedUser);  // ✅ Added Debug Print\r\n\r\n        if (parsedUser?.id) {\r\n          setUser(parsedUser);\r\n        } else {\r\n          alert(\"Please login first to book a room\");\r\n          navigate(\"/login\");\r\n        }\r\n      } else {\r\n        alert(\"Please login first to book a room\");\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Please login first to book a room\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      axios\r\n        .get(`http://localhost:8080/rooms/${roomId}`)\r\n        .then((res) => setRoom(res.data))\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [roomId]);\r\n\r\n  const calculateTotalPrice = () => {\r\n    if (!checkInDate || !checkOutDate || !room) return 0;\r\n    const start = new Date(checkInDate);\r\n    const end = new Date(checkOutDate);\r\n    const diffTime = end - start;\r\n    const diffDays = diffTime / (1000 * 60 * 60 * 24);\r\n    return diffDays > 0 ? diffDays * room.price : 0;\r\n  };\r\n\r\n  const handleBooking = () => {\r\n    if (!user?.id) {\r\n      alert(\"Please login first\");\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    if (!checkInDate || !checkOutDate) {\r\n      alert(\"Please select both check-in and check-out dates\");\r\n      return;\r\n    }\r\n\r\n    const start = new Date(checkInDate);\r\n    const end = new Date(checkOutDate);\r\n\r\n    if (start >= end) {\r\n      alert(\"Check-out date must be after check-in date\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/booking/book\", null, {\r\n        params: {\r\n          userId: user.id,\r\n          roomId: roomId,\r\n          checkInDate: checkInDate,\r\n          checkOutDate: checkOutDate,\r\n        },\r\n      })\r\n      .then(() => {\r\n        setShowSuccessPopup(true);\r\n      })\r\n      .catch((err) => alert(err.response?.data || \"Booking failed\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* CSS and UI code same as before */}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}